A.两种模式各自的特点

工厂方法模式：

把一个类的实例化延迟到它的子类中，核心的工厂类不负责所有产品的创建，而是将具体创建的工作交给子类去做。让子类决定实例化哪一个类。即抽象工厂角色。

1.关注的属性的不同

2.基于接口和抽象类的



抽象工厂模式：
向客户端提供一个接口，使得客户端在不必指定产品的具体类型的情况下，创建多个产品族中的产品对象。既提供一个创建一系列相关或相互以来对象的接口，而无需指定它们的具体的类，这就是抽象工厂模式的用意。是工厂方法模式的进一步推广。


建造者模式： 

建造者模式将一个产品的内部表象和产品的生成过程分开来，从而可以使一个建造过程生成具有不同的内部表象的产品对象。

该模式的特点是需要构造的对象非常复杂，而调用者不需要知道这些细节。

建造模式的关键是导演角色，这个角色掌握了零件对象的状态和产品的整体组装蓝图。没有了这个角色，建造模式就不是建造模式。当然，导演角色可以同时持有几种蓝图，按照需要给出完全不同的组装结果。

1.是关注的行为的不同 

2.基于抽象类



建造者模式最主要功能是基本方法的调用顺序安排，也就是这些基本方法已经实现了；而工厂方法则重点是创建，你要什么对象我创造一个对象出来，组装顺序则不是他关心的。

B.在kfc点餐活动中两者的表现

  因此，对于实现kfc点餐这种内部结构并不复杂的活动而言，工厂模式和建造者模式应该都可以实现【前者可以通过直接定义各类套餐为生产目标来实现，后者则可以灵活地通过导演角色来指挥组合生产部分来实现】，不同的是建造者模式更灵活，更适合该类活动；工厂模式则不足以应对复杂的顾客需求，太过僵硬了。个人认为对这种组合类型的模式前者要远优于后者，尤其在组合越发复杂多样的情况下。